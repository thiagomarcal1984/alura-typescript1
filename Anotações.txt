Para instalar as dependências do arquivo package.json, use o comando:
    npm install

A pasta dist é a que contém os arquivos compartilhados com o servidor web.

Dentro do package.json existem alguns scripts, que podem ser executados
por meio do comando: 
    npm run <nome do script>.

Para rodar o servidor web, use o script server: 
     npm run server.

Crie o arquivo app.js dentro da pasta dist/js. Esse arquivo será tratado como
um módulo.

O import de um módulo JavaScript é diferente do import de um script normal:
    <script type="module" src="js/app.js"></script>

Repare na propriedade type="module".

A sintaxe de criação de classes no JavaScript é a seguinte:
    export class Classe {
        #propriedade1;
        #propriedade2;
        #propriedade3;

        #metodoPrivado() {
            console.log("Método privado.")
        }

        constructor(p1, p2, p3) {
            this.#propriedade1 = p1;
            this.#propriedade2 = p2;
            this.#propriedade3 = p3;
        }
    }

Por padrão os membros da classe (propriedades e métodos) são públicos. Para
torná-los privados, preceda-os com cerquilha.

Módulos são executados dentro do seu escopo. Portanto, sempre que você precisar
usar um módulo fora do seu escopo fechado, exporte esse módulo (no exemplo, a
classe Classe é o módulo que está sendo exportado).

Sintaxe para IMPORTAÇÃO de um módulo em um outro arquivo .js:
    import { Classe } from './modulo/classe.js';

De acordo com o ES2015 (EcmaScript2015), para criar o construtor de uma classe,
use a palavra reservada constructor:
    export class Negociacao {
        #data;
        #quantidade;
        #valor;

        constructor(data, quantidade, valor) {
            this.#data = data;
            this.#quantidade = quantidade;
            this.#valor = valor;
        }
    }

Para criar a instância, use: 
    const objeto = new Classe(true, "parm2", 3)

Como declarar os getters:
    classe Classe {
        ...
        get propriedade1() { // Na declação os parênteses são necessários.
            return this.#propriedade1;
        }
    }

Para invocar o getter, não é necessário sufixar com parênteses:
    const classe = new Classe(1, 2, "Três");
    consoloe.log(classe.propriedade3); // Retorna "Três"
